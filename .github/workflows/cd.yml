name: Continuous Deployment

on:
  workflow_run:
    workflows: ['Continuous Integration']
    branches: [main]
    types: [completed]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-cd-${{ github.event.repository.name }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy application
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Set up Docker context
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          ssh-keyscan ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

          eval $(ssh-agent)
          ssh-add ~/.ssh/id_rsa

          docker context create production --docker "host=ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PORT }}"
          docker context use production

      - name: Deploy application
        env:
          GHCR_USER: ${{ secrets.GHCR_TOKEN }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          COMPOSE_PROJECT_NAME: ${{ github.event.repository.name }}

          APP_NAME: ${{ secrets.APP_NAME }}
          APP_HOST: ${{ secrets.APP_HOST }}
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}

          PG_HOST: ${{ secrets.PG_HOST }}
          PG_PORT: ${{ secrets.PG_PORT }}
          PG_USER: ${{ secrets.PG_USER }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
        run: |
          set -e

          cd ops
          docker compose --progress quiet pull
          docker compose up --force-recreate --exit-code-from migration migration
          docker compose up --detach app
